<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.eterk</groupId>
    <artifactId>mineCode</artifactId>
    <version>1.0</version>

    <properties>
        <scala.major.version>2.13</scala.major.version>
        <scala.version>2.13.12</scala.version>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <main.class>org.eterk.Main</main.class>
    </properties>


    <repositories>
<!--    <repository>-->
<!--            <id>central</id>-->
<!--            <url>https://repo.maven.apache.org/maven2</url>-->
<!--        </repository>-->
        <!--    <repository>-->
        <!--      <id>clojars</id>-->
        <!--      <url>https://clojars.org/repo/</url>-->
        <!--    </repository>-->
        <!--        <repository>-->
        <!--            <id>jitpack.io</id>-->
        <!--            <url>https://jitpack.io</url>-->
        <!--        </repository>-->
        <!--        <repository>-->
        <!--            <id>jitpack.iox</id>-->
        <!--            <url>https://www.dcm4che.org/maven2/</url>-->
        <!--        </repository>-->
        <!--    <repository>-->
        <!--      <id>xuggle repo</id>-->
        <!--      <url>http://xuggle.googlecode.com/svn/trunk/repo/share/java/</url>-->
        <!--    </repository>-->
    </repositories>


    <dependencies>
        <!-- 添加scala库作为依赖包 -->
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.version}</version>
        </dependency>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-compiler</artifactId>
            <version>${scala.version}</version>
        </dependency>

        <!--        <dependency>-->
        <!--            <groupId>org.scala-lang</groupId>-->
        <!--            <artifactId>scala-reflect</artifactId>-->
        <!--            <version>${scala.version}</version>-->
        <!--        </dependency>-->
        <!--        <dependency>-->
        <!--            <groupId>org.scala-lang</groupId>-->
        <!--            <artifactId>scala-tools</artifactId>-->
        <!--            <version>${scala.version}</version>-->
        <!--        </dependency>-->
        <!--        use in icon colorful-->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-imaging</artifactId>
            <version>1.0-alpha2</version>
        </dependency>
        <dependency>
            <groupId>org.soualid.colorthief</groupId>
            <artifactId>colorthief</artifactId>
            <version>0.0.1-SNAPSHOT</version>
        </dependency>
        <!--use in architecture -->
        <dependency>
            <groupId>com.github.scopt</groupId>
            <artifactId>scopt_${scala.major.version}</artifactId>
            <version>4.1.0</version>
        </dependency>
        <dependency>
            <groupId>org.scala-lang.modules</groupId>
            <artifactId>scala-swing_2.13</artifactId>
            <version>3.0.0</version>
        </dependency>

        <!--    use in mp4->wav-->
        <dependency>
            <groupId>ws.schild</groupId>
            <artifactId>jave-core</artifactId>
            <version>2.7.3</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.scalatest/scalatest -->
        <!-- https://mvnrepository.com/artifact/net.sf.image4j/image4j -->
        <dependency>
            <groupId>net.sf.image4j</groupId>
            <artifactId>image4j</artifactId>
            <version>0.7.2</version>
        </dependency>


        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest_${scala.major.version}</artifactId>
            <version>3.2.17</version>
            <scope>test</scope>
        </dependency>
        <!--        <dependency>-->
        <!--            <groupId>org.plotly-scala</groupId>-->
        <!--            <artifactId>plotly-render_${scala.major.version}</artifactId>-->
        <!--            <version>0.8.4</version>-->
        <!--        </dependency>-->


        <!-- [6](https://mvnrepository.com/artifact/batik/batik-svggen) -->
        <dependency>
            <groupId>org.apache.xmlgraphics</groupId>
            <artifactId>batik-svgrasterizer</artifactId>
            <version>1.14</version>
        </dependency>
        <!-- [7](https://mvnrepository.com/artifact/batik/batik-util) -->
        <!--        <dependency>-->
        <!--            <groupId>org.apache.xmlgraphics</groupId>-->
        <!--            <artifactId>batik-transcoder</artifactId>-->
        <!--            <version>1.14</version>-->
        <!--        </dependency>-->
        <!--        <dependency>-->
        <!--            <groupId>org.apache.xmlgraphics</groupId>-->
        <!--            <artifactId>batik-rasterizer</artifactId>-->
        <!--            <version>1.14</version>-->
        <!--        </dependency>-->
        <dependency>
            <groupId>net.coobird</groupId>
            <artifactId>thumbnailator</artifactId>
            <version>0.4.14</version>
        </dependency>


    </dependencies>

    <!-- 使用proguard-maven-plugin来对jar包进行混淆和优化 -->
    <!--            <plugin>-->
    <!--                <groupId>com.github.wvengen</groupId>-->
    <!--                <artifactId>proguard-maven-plugin</artifactId>-->
    <!--                <version>2.3.1</version>-->
    <!--                <executions>-->
    <!--                    <execution>-->
    <!--                        <phase>package</phase>-->
    <!--                        <goals>-->
    <!--                            <goal>proguard</goal>-->
    <!--                        </goals>-->
    <!--                    </execution>-->
    <!--                </executions>-->
    <!--                <configuration>-->
    <!--                    <obfuscate>true</obfuscate>-->
    <!--&lt;!&ndash;                    <optimize>true</optimize>&ndash;&gt;-->
    <!--                    <injar>${project.build.finalName}.jar</injar>-->
    <!--                    <outjar>${project.build.finalName}-proguard.jar</outjar>-->
    <!--                    <proguardInclude>${basedir}/proguard.conf</proguardInclude>-->
    <!--                </configuration>-->
    <!--            </plugin>-->
    <!-- 使用maven-jar-plugin来对jar包进行压缩 -->

    <build>
        <plugins>
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>4.5.3</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- 使用maven-shade-plugin来打包jar包，并去除一些未使用的类或资源 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.2.4</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <minimizeJar>true</minimizeJar>
                            <createDependencyReducedPom>false</createDependencyReducedPom>
                            <transformers>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>${main.class}</mainClass>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!--            <plugin>-->
            <!--                <groupId>org.apache.maven.plugins</groupId>-->
            <!--                <artifactId>maven-jar-plugin</artifactId>-->
            <!--                <version>3.2.0</version>-->
            <!--                <configuration>-->
            <!--                    <archive>-->
            <!--                        <compress>true</compress>-->
            <!--                    </archive>-->
            <!--                </configuration>-->
            <!--            </plugin>-->
            <!--            &lt;!&ndash; 使用maven-dependency-plugin来分析项目的依赖 &ndash;&gt;-->
            <!--            <plugin>-->
            <!--                <groupId>org.apache.maven.plugins</groupId>-->
            <!--                <artifactId>maven-dependency-plugin</artifactId>-->
            <!--                <version>3.2.0</version>-->
            <!--                <executions>-->
            <!--                    <execution>-->
            <!--                        <id>analyze</id>-->
            <!--                        <goals>-->
            <!--                            <goal>analyze-only</goal>-->
            <!--                        </goals>-->
            <!--                        <configuration>-->
            <!--                            <failOnWarning>true</failOnWarning>-->
            <!--                        </configuration>-->
            <!--                    </execution>-->
            <!--                </executions>-->
            <!--            </plugin>-->
        </plugins>
    </build>


</project>

