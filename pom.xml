<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.git</groupId>
    <artifactId>mineToys</artifactId>
    <version>1.0</version>

    <properties>
        <scala.major.version>2.13</scala.major.version>
        <scala.version>2.13.12</scala.version>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <main.class>org.eterk.Main</main.class>
        <cli.class>org.eterk.InteractiveCommandLine</cli.class>
        <gui.class>org.eterk.GUIClient</gui.class>
        <client.class>org.eterk.InteractiveCommandLine</client.class>
        <app.name>mineToys</app.name>
        <app.version>${version}.0.0</app.version>
    </properties>


    <repositories>
            <repository>
                    <id>central</id>
                    <url>https://repo.maven.apache.org/maven2</url>
                </repository>
            <repository>
              <id>clojars</id>
              <url>https://clojars.org/repo/</url>
            </repository>
                <repository>
                    <id>jitpack.io</id>
                    <url>https://jitpack.io</url>
                </repository>
                <repository>
                    <id>jitpack.iox</id>
                    <url>https://www.dcm4che.org/maven2/</url>
                </repository>
            <repository>
              <id>xuggle repo</id>
              <url>http://xuggle.googlecode.com/svn/trunk/repo/share/java/</url>
            </repository>
    </repositories>


    <dependencies>
        <!-- 添加scala库作为依赖包 -->
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.version}</version>
        </dependency>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-compiler</artifactId>
            <version>${scala.version}</version>
        </dependency>
        <dependency>
            <groupId>io.github.eterk</groupId>
            <artifactId>mian</artifactId>
            <version>0.1</version>
        </dependency>

        <!--        <dependency>-->
        <!--            <groupId>org.scala-lang</groupId>-->
        <!--            <artifactId>scala-reflect</artifactId>-->
        <!--            <version>${scala.version}</version>-->
        <!--        </dependency>-->
        <!--        <dependency>-->
        <!--            <groupId>org.scala-lang</groupId>-->
        <!--            <artifactId>scala-tools</artifactId>-->
        <!--            <version>${scala.version}</version>-->
        <!--        </dependency>-->
        <!--        use in icon colorful-->
        <!-- https://mvnrepository.com/artifact/commons-net/commons-net -->
        <dependency>
            <groupId>commons-net</groupId>
            <artifactId>commons-net</artifactId>
            <version>3.8.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-imaging</artifactId>
            <version>1.0-alpha2</version>
        </dependency>
        <dependency>
            <groupId>edu.stanford.nlp</groupId>
            <artifactId>stanford-corenlp</artifactId>
            <version>4.5.5</version>
            <classifier>models-chinese</classifier>
        </dependency>
        <dependency>
            <groupId>edu.stanford.nlp</groupId>
            <artifactId>stanford-corenlp</artifactId>
            <version>4.5.5</version>
        </dependency>
        <dependency>
            <groupId>edu.stanford.nlp</groupId>
            <artifactId>stanford-corenlp</artifactId>
            <version>4.5.5</version>
            <classifier>models</classifier>
        </dependency>
        <dependency>
            <groupId>org.json4s</groupId>
            <artifactId>json4s-native_2.13</artifactId>
            <version>4.1.0-M4</version>
        </dependency>
        <dependency>
            <groupId>com.github.docker-java</groupId>
            <artifactId>docker-java</artifactId>
            <version>3.3.4</version>
        </dependency>


        <!--        <dependency>-->
        <!--            <groupId>edu.stanford.nlp</groupId>-->
        <!--            <artifactId>stanford-corenlp</artifactId>-->
        <!--            <version>4.3.1</version>-->
        <!--        </dependency>-->
        <dependency>
            <groupId>org.soualid.colorthief</groupId>
            <artifactId>colorthief</artifactId>
            <version>0.0.1-SNAPSHOT</version>
        </dependency>
        <!--use in architecture -->
        <dependency>
            <groupId>com.github.scopt</groupId>
            <artifactId>scopt_${scala.major.version}</artifactId>
            <version>4.1.0</version>
        </dependency>
        <dependency>
            <groupId>org.scala-lang.modules</groupId>
            <artifactId>scala-swing_2.13</artifactId>
            <version>3.0.0</version>
        </dependency>

        <!--    use in mp4->wav-->
        <dependency>
            <groupId>ws.schild</groupId>
            <artifactId>jave-core</artifactId>
            <version>2.7.3</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.scalatest/scalatest -->
        <!-- https://mvnrepository.com/artifact/net.sf.image4j/image4j -->
<!--        <dependency>-->
<!--            <groupId>net.sf.image4j</groupId>-->
<!--            <artifactId>image4j</artifactId>-->
<!--            <version>0.7.2</version>-->
<!--        </dependency>-->


        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest_${scala.major.version}</artifactId>
            <version>3.2.17</version>
            <scope>test</scope>
        </dependency>
        <!--        <dependency>-->
        <!--            <groupId>org.plotly-scala</groupId>-->
        <!--            <artifactId>plotly-render_${scala.major.version}</artifactId>-->
        <!--            <version>0.8.4</version>-->
        <!--        </dependency>-->


        <!-- [6](https://mvnrepository.com/artifact/batik/batik-svggen) -->
        <dependency>
            <groupId>org.apache.xmlgraphics</groupId>
            <artifactId>batik-svgrasterizer</artifactId>
            <version>1.14</version>
        </dependency>
        <!-- [7](https://mvnrepository.com/artifact/batik/batik-util) -->
        <!--        <dependency>-->
        <!--            <groupId>org.apache.xmlgraphics</groupId>-->
        <!--            <artifactId>batik-transcoder</artifactId>-->
        <!--            <version>1.14</version>-->
        <!--        </dependency>-->
        <!--        <dependency>-->
        <!--            <groupId>org.apache.xmlgraphics</groupId>-->
        <!--            <artifactId>batik-rasterizer</artifactId>-->
        <!--            <version>1.14</version>-->
        <!--        </dependency>-->
        <dependency>
            <groupId>net.coobird</groupId>
            <artifactId>thumbnailator</artifactId>
            <version>0.4.14</version>
        </dependency>
        <!--        "com.osinka.i18n" %% "scala-i18n" % "1.0.2"-->
        <!-- https://mvnrepository.com/artifact/com.osinka.i18n/scala-i18n -->
        <dependency>
            <groupId>com.osinka.i18n</groupId>
            <artifactId>scala-i18n_2.13</artifactId>
            <version>1.0.3</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.fusesource.jansi/jansi -->
        <dependency>
            <groupId>org.fusesource.jansi</groupId>
            <artifactId>jansi</artifactId>
            <version>2.4.1</version>
        </dependency>
        <dependency>
            <groupId>org.scalaj</groupId>
            <artifactId>scalaj-http_2.13</artifactId>
            <version>2.4.2</version>
        </dependency>

        <dependency>
            <groupId>org.jline</groupId>
            <artifactId>jline</artifactId>
            <version>3.25.0</version>
        </dependency>


    </dependencies>


    <build>
        <plugins>
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>4.5.3</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- https://mvnrepository.com/artifact/com.akathist.maven.plugins.launch4j/launch4j-maven-plugin -->
                <groupId>com.akathist.maven.plugins.launch4j</groupId>
                <artifactId>launch4j-maven-plugin</artifactId>
                <version>2.5.0</version>
                <executions>
                    <execution>
                        <id>gui</id>
                        <phase>package</phase>
                        <goals>
                            <goal>launch4j</goal>
                        </goals>
                        <configuration>
                            <headerType>console</headerType>
                            <!-- The name of the exe file to create -->
                            <outfile>target/${artifactId}-gui-${app.version}.exe</outfile>
                            <!-- The name of the jar file to wrap -->
                            <jar>target/${artifactId}-${version}.jar</jar>
                            <classPath>
                                <mainClass>${gui.class}</mainClass>
                                <addDependencies>true</addDependencies>
                                <preCp>lib/*.jar</preCp>
                            </classPath>
                            <!-- The minimum JRE version required -->
                            <jre>
                                <minVersion>1.8.0</minVersion>
                            </jre>
                            <!-- The icon file to use for the exe file -->
                            <icon>src/main/resources/static/${app.name}.ico</icon>
                            <!-- The version information to display for the exe file -->
                            <versionInfo>
                                <fileVersion>${app.version}</fileVersion>
                                <txtFileVersion>${app.version}</txtFileVersion>
                                <fileDescription>useful kit</fileDescription>
                                <productVersion>${app.version}</productVersion>
                                <txtProductVersion>${app.version}</txtProductVersion>
                                <productName>${app.name}</productName>
                                <internalName>${app.name}</internalName>
                                <originalFilename>${app.name}${app.version}-gui.exe</originalFilename>
                                <companyName>${groupId}</companyName>
                            </versionInfo>

                        </configuration>
                    </execution>
                    <execution>
                        <id>cli</id>
                        <phase>package</phase>
                        <goals>
                            <goal>launch4j</goal>
                        </goals>
                        <configuration>
                            <headerType>console</headerType>
                            <!-- The name of the exe file to create -->
                            <outfile>target/${artifactId}-cli-${app.version}.exe</outfile>
                            <!-- The name of the jar file to wrap -->
                            <jar>target/${artifactId}-${version}.jar</jar>
                            <classPath>
                                <mainClass>${cli.class}</mainClass>
                                <addDependencies>true</addDependencies>
                                <preCp>lib/*.jar</preCp>
                            </classPath>
                            <!-- The minimum JRE version required -->
                            <jre>
                                <minVersion>1.8.0</minVersion>
                            </jre>
                            <!-- The icon file to use for the exe file -->
                            <icon>src/main/resources/static/cli.ico</icon>
                            <!-- The version information to display for the exe file -->
                            <versionInfo>
                                <fileVersion>${app.version}</fileVersion>
                                <txtFileVersion>${app.version}</txtFileVersion>
                                <fileDescription>useful kit</fileDescription>
                                <productVersion>${app.version}</productVersion>
                                <txtProductVersion>${app.version}</txtProductVersion>
                                <productName>${app.name}</productName>
                                <internalName>${app.name}</internalName>
                                <originalFilename>${app.name}${app.version}-cli.exe</originalFilename>
                                <companyName>${groupId}</companyName>
                            </versionInfo>

                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--            &lt;!&ndash; 使用maven-dependency-plugin来分析项目的依赖 &ndash;&gt;-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <!--                    <execution>-->
                    <!--                        <id>analyze</id>-->
                    <!--                        <goals>-->
                    <!--                            <goal>analyze-only</goal>-->
                    <!--                        </goals>-->
                    <!--                        <configuration>-->
                    <!--                            <failOnWarning>true</failOnWarning>-->
                    <!--                        </configuration>-->
                    <!--                    </execution>-->
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                            <!--                            <includeArtifactIds>stanford-corenlp</includeArtifactIds>-->
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.3.0</version>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <finalName>app</finalName>
                            <appendAssemblyId>false</appendAssemblyId>
                            <descriptors>
                                <descriptor>src/main/assembly/assembly.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>


</project>

